SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems](
	[ArticleID] [int] NOT NULL,
	[RecurringID] [int] NOT NULL,
	[DocumentID] [int] NOT NULL,
	[Position] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems] PRIMARY KEY CLUSTERED 
(
	[ArticleID] ASC,
	[RecurringID] ASC,
	[DocumentID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments] FOREIGN KEY([DocumentID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsDocuments] ([DocEntryID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsDocuments]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData] FOREIGN KEY([ArticleID], [RecurringID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] ([ArticleID], [RecurringID]) ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsDocumentRecurringEventItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsDocumentRecurringEventItems_EasyDNNNewsEventsRecurringData]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsEventEditSignUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsEventEditSignUp]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsEventViewSignUp]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsEventViewSignUp]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_EditPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}EDS_EditPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_ViewPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION {databaseOwner}[{objectQualifier}EDS_ViewPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetUpcomingEvents]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@RowCount INT,
	@AdminOrSuperUser BIT  = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@HideUnlocalizedItems BIT = 0,
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(1000);
SET @paramList = N''
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@RowCount INT,
	@LocaleCode NVARCHAR(20),
	@FilterByDNNUserID INT,
	@FilterByDNNGroupID INT,
	@PermissionsModuleID INT,
	@FilterCategoryID INT = NULL''

SET @sqlcommand = N''
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @EventsLocaleCode NVARCHAR(20);

IF @LocaleCode IS NULL
SET @EventsLocaleCode = ''''Default'''';
ELSE
SET @EventsLocaleCode = (SELECT @LocaleCode)

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;	
CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;	
CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
	SET @sqlcommand = @sqlcommand + N''INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND [RoleID] IS NULL) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN	
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @PermissionsModuleID) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
		END
	END
END


IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO #FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO #UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM #FiltredByCategories AS nfc INNER JOIN #UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @IsSocialInstance = 1
BEGIN
	IF @FilterByDNNGroupID <> 0
	BEGIN	
		SET @FilterBySocialGroup = 1;
	END
END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @CalendarModuleID ''
	END
END
SET @sqlcommand = @sqlcommand + N''
IF @RowCount = 0 OR @RowCount > 100
BEGIN
	SET @RowCount = 100;
END ''

SET @sqlcommand = @sqlcommand  + N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N'' AND na.HideDefaultLocale = 0 ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand  + N''
)''

IF @LocaleCode IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	, FinalArticleIDsSet (ArticleID) AS (
		SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 ''
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
			
			SET @sqlcommand = @sqlcommand + N''
			WHERE na.HasPermissions = 0
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 
					((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime))) ''
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
			
			SET @sqlcommand = @sqlcommand + N''
			WHERE na.HasPermissions = 0
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 ''
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
			SET @sqlcommand = @sqlcommand + N''
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
				END
			SET @sqlcommand = @sqlcommand + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = 
					CASE WHEN ((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
						THEN 1
						ELSE 0
					END ''
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
			SET @sqlcommand = @sqlcommand + N''
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
				END
			SET @sqlcommand = @sqlcommand + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 ''
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
			SET @sqlcommand = @sqlcommand + N''
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) ''
			SET @sqlcommand = @sqlcommand + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = 
					CASE WHEN ((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
						THEN 1
						ELSE 0
					END ''
				IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
						
			SET @sqlcommand = @sqlcommand + N''
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) ''
		SET @sqlcommand = @sqlcommand + N''
		)
	),
	FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords) AS (
		SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet) AND LocaleCode = @LocaleCode
	)
	SELECT TOP (@RowCount)
		ResultFinal.ArticleID, ResultFinal.UserID, ResultFinal.PublishDate, ResultFinal.Title, ResultFinal.TitleLink,ResultFinal.DetailType,ResultFinal.DetailTypeData, ResultFinal.ArticleImage,
		ResultFinal.Summary,
		CASE WHEN ResultFinal.RecurringID IS NULL
		THEN
			NULL
		ELSE
			(SELECT [Summary] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent] WHERE ArticleID = ResultFinal.ArticleID AND RecurringID = ResultFinal.RecurringID AND LocaleCode = @EventsLocaleCode)
		END AS CustomSummary,
		ResultFinal.Article, ResultFinal.AuthorAliasName,ResultFinal.[DetailTarget],
		ResultFinal.StartDate,
		ResultFinal.EndDate,
		ResultFinal.RecurringID,
		ResultFinal.WhloeDay,
		ResultFinal.ShowEndDate,
		ResultFinal.GoogleMapData,
		ResultFinal.CssCategoryClasses
		
	FROM (
	SELECT Result.*,
		CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
		ne.WhloeDay,ne.ShowEndDate,
	(SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
	AS GoogleMapData,
	(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
	AS CssCategoryClasses,ne.Recurring
	FROM (
		SELECT na.ArticleID,na.UserID,na.PublishDate,na.Title,na.TitleLink,na.DetailType,na.DetailTypeData,na.ArticleImage,na.Summary,na.Article,na.AuthorAliasName,na.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na WHERE na.ArticleID IN (SELECT ArticleID FROM FinalArticleIDsSet WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
		UNION ALL
		SELECT na.ArticleID,na.UserID,na.PublishDate,fla.Title,fla.TitleLink,na.DetailType,fla.DetailTypeData,na.ArticleImage,fla.Summary,fla.Article,na.AuthorAliasName,na.[DetailTarget]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = na.ArticleID
	) As Result
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON Result.ArticleID = ne.ArticleID
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON (ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 =
		CASE WHEN ((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
				(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
			THEN 1
			ELSE 0
		END 
	)) AS ResultFinal
	 ORDER BY StartDate; ''
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand + N''
SELECT TOP (@RowCount)
Result.ArticleID, Result.UserID, Result.PublishDate, Result.Title, Result.TitleLink,Result.DetailType,Result.DetailTypeData, Result.ArticleImage,
Result.Summary,
CASE WHEN Result.RecurringID IS NULL
THEN
	NULL
ELSE
	(SELECT [Summary] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringContent] WHERE ArticleID = Result.ArticleID AND RecurringID = Result.RecurringID AND LocaleCode = @EventsLocaleCode)
END AS CustomSummary,
Result.Article, Result.AuthorAliasName,Result.[DetailTarget],
Result.StartDate,
Result.EndDate,
Result.RecurringID,
Result.WhloeDay,
Result.ShowEndDate,

(SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN  {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection]  AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID =  Result.ArticleID)
AS GoogleMapData,
(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
AS CssCategoryClasses
FROM (
	SELECT na.ArticleID, na.UserID, na.PublishDate, na.Title, na.TitleLink,na.DetailType,na.DetailTypeData, na.ArticleImage, na.Summary, na.Article, na.AuthorAliasName,na.[DetailTarget],
	CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
	CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
	CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
	  ne.WhloeDay,ne.ShowEndDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
			((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
					(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
	WHERE na.ArticleID IN (
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
		WHERE na.HasPermissions = 0
			AND ne.Recurring = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
			AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) ''
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		SET @sqlcommand = @sqlcommand + N''
		UNION ALL
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
				((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime))) ''		
		SET @sqlcommand = @sqlcommand + N''
		WHERE na.HasPermissions = 0
			AND ne.Recurring = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		SET @sqlcommand = @sqlcommand + N''
		GROUP BY na.ArticleID
		UNION ALL
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
			AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) ''
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
				IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
				ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
			END
		SET @sqlcommand = @sqlcommand + N''
		UNION ALL
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
				((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime)))
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
			IF @AdminOrSuperUser = 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
				IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
				ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
			END			
		SET @sqlcommand = @sqlcommand + N''
		UNION
		SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories)
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
	
		SET @sqlcommand = @sqlcommand + N''
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 0
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
			AND ((ne.StartDate >= @CurrentDate) OR (ne.StartDate <= @CurrentDate AND ne.EndDate >= @CurrentDate)) ''
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) ''
		SET @sqlcommand = @sqlcommand + N''
		GROUP BY na.ArticleID
		UNION ALL
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND
				((ne.StartDate >= @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID ORDER BY erd.StartDateTime)) OR
							(ne.StartDate < @CurrentDate AND nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime >= @CurrentDate ORDER BY erd.StartDateTime))) ''		
		SET @sqlcommand = @sqlcommand + N''
		WHERE na.HasPermissions = 1
			AND ne.Recurring = 1
			AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)) ''
		SET @sqlcommand = @sqlcommand + N''
	)
) AS Result ORDER BY StartDate; ''
END

SET @sqlcommand = @sqlcommand  + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

EXEC sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID  = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@RowCount = @RowCount
	,@LocaleCode = @LocaleCode
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@FilterCategoryID = @FilterCategoryID' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetEvents]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@AdminOrSuperUser BIT = 0,
	@FromDate DATETIME = NULL, -- articles
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL, -- events
	@eToDate DATETIME = NULL,
	@DisplayType TINYINT = 0, -- 0 - ByStartDate, 1 - ByPublishDate , 2 - ByStartDateOrPublishDate
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems BIT = 0,
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@UserID INT
	,@CalendarModuleID INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@DisplayType TINYINT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT
	,@FilterCategoryID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;	
CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;	
CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND [RoleID] IS NULL) ''
		END
		ELSE
		BEGIN	
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
		BEGIN
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @PermissionsModuleID) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
		END
	END
END

IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO #FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO #UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM #FiltredByCategories AS nfc INNER JOIN #UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @CalendarModuleID ''
END
SET @sqlcommand = @sqlcommand  + N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N'' AND na.HideDefaultLocale = 0 ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand  + N''
)''
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N''
, OnlyArticleIDs (ArticleID) AS (
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND ne.Recurring = 0 ''
	IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
	ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
	ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''

	IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND ne.Recurring = 1 ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
		SET @sqlcommand = @sqlcommand  + N''
	WHERE na.HasPermissions = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END
SET @sqlcommand = @sqlcommand  + N''
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT *, StartDate AS CombinedOrderBy FROM (
	SELECT Result.*,
		CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
		ne.WhloeDay,ne.ShowEndDate,
		(SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID = Result.ArticleID)
		AS GoogleMapData,
		(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
		AS CssCategoryClasses
		FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As Result
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON Result.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON (ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = Result.ArticleID ORDER BY erd.StartDateTime) AND Result.PublishDate >= @FromDate AND Result.PublishDate <= @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = Result.ArticleID ORDER BY erd.StartDateTime) AND Result.PublishDate >= @FromDate AND Result.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
		SET @sqlcommand = @sqlcommand  + N''
		 )
	) AS ResultFinal ORDER BY CombinedOrderBy; ''
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N''
	SELECT
	Result.[ArticleID],Result.[UserID],Result.[RecurringID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[ArticleImage],Result.[PublishDate],Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[EventArticle],Result.[DetailTarget],
	Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
	(SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID = Result.ArticleID)
	AS GoogleMapData,
	Result.StartDate AS CombinedOrderBy,
	(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
	AS CssCategoryClasses
	FROM (SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget],ne.WhloeDay,ne.ShowEndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON n.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
		
		SET @sqlcommand = @sqlcommand  + N'' 
		 WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ne.Recurring = 0 ''
			IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
			ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
			ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''

			IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
			SET @sqlcommand = @sqlcommand  + N''
			WHERE na.HasPermissions = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND ne.Recurring = 1 ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
			SET @sqlcommand = @sqlcommand  + N''
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
				SET @sqlcommand = @sqlcommand  + N''
			WHERE na.HasPermissions = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			)
	 ) AS Result ORDER BY CombinedOrderBy; ''
END
SET @sqlcommand = @sqlcommand  + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@DisplayType = @DisplayType
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@FilterCategoryID = @FilterCategoryID' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetArticles]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@AdminOrSuperUser BIT = 0,
	@FromDate DATETIME = NULL, -- articles
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL, -- events
	@eToDate DATETIME = NULL,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems BIT = 0,
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	@PortalID INT
	,@UserID INT
	,@CalendarModuleID INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT
	,@FilterCategoryID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;	
CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;	
CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND [RoleID] IS NULL) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @PermissionsModuleID) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
		END
	END
END

IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO #FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO #UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM #FiltredByCategories AS nfc INNER JOIN #UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @CalendarModuleID ''
END

SET @sqlcommand = @sqlcommand  + N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N'' AND na.HideDefaultLocale = 0 ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand  + N''
)''
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N''
, OnlyArticleIDs (ArticleID) AS (
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
	WHERE na.HasPermissions = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	WHERE na.HasPermissions = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	WHERE na.HasPermissions = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END

SET @sqlcommand = @sqlcommand  + N''
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT Result.*,
(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
AS CssCategoryClasses
FROM (
	SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
		   FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
	UNION ALL
	SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
) As Result ORDER BY Result.PublishDate;
''
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N''
SELECT Result.*,
	(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
	 AS CssCategoryClasses
	FROM (SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
			WHERE na.HasPermissions = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			WHERE na.HasPermissions = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			WHERE na.HasPermissions = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			)
	 ) AS Result ORDER BY Result.PublishDate; ''

END
SET @sqlcommand = @sqlcommand  + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@FilterCategoryID = @FilterCategoryID' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarGetAllContent]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@FromDate DATETIME = NULL, -- articles
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL, -- events
	@eToDate DATETIME = NULL,
	@DisplayType TINYINT = 0, -- 0 - ByStartDate, 1 - ByPublishDate , 2 - ByStartDateOrPublishDate
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - SELECTion, 2 - AutoAdd
	@HideUnlocalizedItems BIT = 0,
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	@PortalID INT
	,@UserID INT
	,@CalendarModuleID INT
	,@AdminOrSuperUser BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@DisplayType TINYINT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@ShowAllAuthors BIT
	,@CategoryFilterType TINYINT
	,@HideUnlocalizedItems BIT
	,@PermissionSettingsSource TINYINT
	,@PermissionsModuleID INT
	,@FilterCategoryID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;	
CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;	
CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND [RoleID] IS NULL) ''	
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL) ''
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand  + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
				WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @PermissionsModuleID AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] = @PermissionsModuleID) ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand  + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.RoleID IN (SELECT RoleID FROM #UserInRoles) AND rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT ShowAllCategories FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO #UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO #UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT RoleID FROM #UserInRoles))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL) ''
		END
	END
END

IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO #FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	INSERT INTO #UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
		)
		INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO #UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM #FiltredByCategories AS nfc INNER JOIN #UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

IF @ShowAllAuthors = 0
BEGIN
	SET @sqlcommand = @sqlcommand  + N''
	DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
	UNION 
	SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
		WHERE mgi.ModuleID = @CalendarModuleID ''
END

SET @sqlcommand = @sqlcommand  + N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand  + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @sqlcommand = @sqlcommand  + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.PortalID=@PortalID
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @LocaleCode IS NULL SET @sqlcommand = @sqlcommand  + N'' AND na.HideDefaultLocale = 0 ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @ShowAllAuthors = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand  + N''
)''
IF @LocaleCode IS NOT NULL
BEGIN
SET @sqlcommand = @sqlcommand  + N''
, OnlyArticleIDs (ArticleID) AS (
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
	WHERE na.HasPermissions = 0
		AND na.EventArticle = 0 
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 0  
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
		END 
	SET @sqlcommand = @sqlcommand  + N''
	UNION
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
		AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END
	SET @sqlcommand = @sqlcommand  + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
	SET @sqlcommand = @sqlcommand  + N''
	WHERE na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
		END
SET @sqlcommand = @sqlcommand  + N''
),
FinalLocalizedArticleIDsSet (ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
	 SELECT ArticleID,Title,SubTitle,Summary,Article,DetailTypeData,clTitleLink AS TitleLink ,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs) AND LocaleCode = @LocaleCode
)
SELECT *, StartDate AS CombinedOrderBy FROM (
	SELECT Result.*,
		CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
		ne.WhloeDay,ne.ShowEndDate,
		(SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID = Result.ArticleID)
		AS GoogleMapData,
		(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
		AS CssCategoryClasses
		FROM (
			SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n WHERE ArticleID IN (SELECT ArticleID FROM OnlyArticleIDs WHERE ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet))
			UNION ALL
			SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],n.[ArticleImage],n.[PublishDate],fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[EventArticle],n.[DetailTarget]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID
		) As Result
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON Result.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON (ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = Result.ArticleID ORDER BY erd.StartDateTime) AND Result.PublishDate >= @FromDate AND Result.PublishDate <= @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = Result.ArticleID ORDER BY erd.StartDateTime) AND Result.PublishDate >= @FromDate AND Result.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
		SET @sqlcommand = @sqlcommand  + N''
		 )
	) AS ResultFinal ORDER BY CombinedOrderBy; ''
END
ELSE
BEGIN
SET @sqlcommand = @sqlcommand  + N''
	SELECT
	Result.[ArticleID],Result.[UserID],Result.[RecurringID],Result.[Title],Result.[SubTitle],Result.[Summary],Result.[ArticleImage],Result.[PublishDate],Result.[TitleLink],Result.[DetailType],Result.[DetailTypeData],Result.[EventArticle],Result.[DetailTarget],
	Result.StartDate, Result.EndDate,Result.WhloeDay,Result.ShowEndDate,
	(SELECT PointData FROM {databaseOwner}[{objectQualifier}EasyDNNnewsGoogleMapsData] AS md INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS mc ON md.GoogleMapID = mc.GoogleMapID WHERE mc.ArticleID = Result.ArticleID)
	AS GoogleMapData,
	Result.StartDate AS CombinedOrderBy,
	(SELECT c.CategoryID, c.CategoryName FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN #UserViewCategories AS uvc ON c.CategoryID = uvc.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cl ON uvc.CategoryID = cl.CategoryID WHERE cl.ArticleID = Result.ArticleID ORDER BY c.Position FOR XML AUTO, ROOT(''''root''''))
	AS CssCategoryClasses
	FROM (SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[ArticleImage],n.[PublishDate],n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[EventArticle],n.[DetailTarget],ne.WhloeDay,ne.ShowEndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.StartDateTime ELSE ne.StartDate END AS StartDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.EndDateTime ELSE ne.EndDate END AS EndDate,
		CASE WHEN ne.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON n.ArticleID = ne.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
		IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
		ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate ''
		ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = n.ArticleID ORDER BY erd.StartDateTime) AND n.PublishDate >= @FromDate AND n.PublishDate <= @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
		
		SET @sqlcommand = @sqlcommand  + N'' 
		 WHERE n.ArticleID IN(
		 	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
			WHERE na.HasPermissions = 0
				AND na.EventArticle = 0 
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
			SET @sqlcommand = @sqlcommand  + N''
			WHERE na.HasPermissions = 0
				AND na.EventArticle = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand  + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 0  
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
			SET @sqlcommand = @sqlcommand  + N''
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
					IF @UserID = -1 SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID IS NULL ''
					ELSE SET @sqlcommand = @sqlcommand  + N'' AND aup.UserID = @UserID ''
				END 
			SET @sqlcommand = @sqlcommand  + N''
			UNION
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
				AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((na.PublishDate BETWEEN @FromDate AND @ToDate) OR (ne.StartDate <= @eToDate AND ne.EndDate >= @eFromDate)) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			UNION ALL
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 ''
				IF @DisplayType = 0 SET @sqlcommand = @sqlcommand  + N'' AND nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate ''
				ELSE IF @DisplayType = 1 SET @sqlcommand = @sqlcommand  + N'' AND nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				ELSE IF @DisplayType = 2 SET @sqlcommand = @sqlcommand  + N'' AND ((nerd.RecurringID = (SELECT TOP 1 RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = na.ArticleID ORDER BY erd.StartDateTime) AND na.PublishDate BETWEEN @FromDate AND @ToDate) OR (nerd.StartDateTime <= @eToDate AND nerd.EndDateTime >= @eFromDate)) ''
			SET @sqlcommand = @sqlcommand  + N''
			WHERE na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1
				AND na.ArticleID IN (SELECT ArticleID FROM MainFilters) ''
				IF @AdminOrSuperUser = 0
				BEGIN
					SET @sqlcommand = @sqlcommand  + N'' AND arp.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
				END
			SET @sqlcommand = @sqlcommand  + N''
			)
	 ) AS Result ORDER BY CombinedOrderBy; ''
END
SET @sqlcommand = @sqlcommand  + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@DisplayType = @DisplayType
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@ShowAllAuthors = @ShowAllAuthors
	,@CategoryFilterType = @CategoryFilterType
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@PermissionsModuleID = @PermissionsModuleID
	,@FilterCategoryID = @FilterCategoryID' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsCalendarArchive]
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@AdminOrSuperUser BIT  = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@ShowAllAuthors BIT = 1, -- filter postavka menija
	@CategoryFilterType TINYINT = 0, --0 All categories, 1 - Selection, 2 - AutoAdd
	@PermissionSettingsSource TINYINT = 0, -- None, 1 - portal, 2 - module
	@PermissionsModuleID INT = 0, -- NewsModuleID
	@HideUnlocalizedItems BIT = 0,
	@DateTimeOffset INT,
	@OnlyArticles BIT = 0,
	@OnlyEvents BIT = 0,
	@FilterCategoryID INT = NULL
AS
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(1000);
SET @paramList = N''
	@PortalID INT,
	@UserID INT,
	@CalendarModuleID INT,
	@LocaleCode NVARCHAR(20),
	@FilterByDNNUserID INT,
	@FilterByDNNGroupID INT,
	@PermissionsModuleID INT,
	@DateTimeOffset INT,
	@FilterCategoryID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY);
DECLARE @FiltredByCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @AdminOrSuperUser = 1 OR @PermissionSettingsSource = 0
BEGIN
	SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
		BEGIN
			SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL; ''
		END
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.RoleID IS NULL; ''
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL AND rps.ShowAllCategories = 1)
			BEGIN
				SET @sqlcommand = @sqlcommand + N''INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N''
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL; ''
			END
		END
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
		) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
		)
			INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; ''
	END
	ELSE -- by module
	BEGIN
		IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @PermissionsModuleID AND PermissionsPMSource = 0)
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID AND ups.ShowAllCategories = 1
			)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID = @PermissionsModuleID
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @PermissionsModuleID; ''
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.ShowAllCategories = 1
			) OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL AND ups.ShowAllCategories = 1
			)
				INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
			ELSE
				INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
				INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
				WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
				WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL ''
		END
	END
END

IF @FilterCategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories WHERE CategoryID = @FilterCategoryID;
	INSERT INTO @FiltredByCategories SELECT @FilterCategoryID; ''
END
ELSE IF @CategoryFilterType = 0 -- 0 All categories
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
END
ELSE IF @CategoryFilterType = 1 -- 1 - Selection
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
	INSERT INTO @UserViewCategoriesWithFilter 
	SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @CalendarModuleID
	
	INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID; ''
END
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	WITH hierarchy AS(
		SELECT [CategoryID], [ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @CalendarModuleID)) AND PortalID = @PortalID
		UNION ALL
		SELECT c.[CategoryID], c.[ParentCategory]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
	)
	INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
	INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID; ''
END

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @CalendarModuleID
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @CalendarModuleID ''
	END
END


IF @OnlyArticles = 1 AND @OnlyEvents = 0 -- only articles
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT MONTH(final.PublishDate) AS [Month], YEAR(final.PublishDate) AS [Year], COUNT(*) AS [Count] FROM (
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''		
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
SET @sqlcommand = @sqlcommand + N''
) AS final
GROUP BY MONTH(PublishDate), YEAR(PublishDate) ORDER BY [Year] DESC, [Month] DESC ''
END
ELSE IF @OnlyEvents = 1 AND @OnlyArticles = 0 -- only events
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT MONTH(final.StartDate) AS [Month], YEAR(final.StartDate) AS [Year], COUNT(*) AS [Count] FROM (
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
	IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, nerd.[StartDateTime]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [StartDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
) AS final
GROUP BY MONTH(StartDate), YEAR(StartDate) ORDER BY [Year] DESC, [Month] DESC ''
END
ELSE -- articles and events
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	SELECT MONTH(final.CombinedDate) AS [Month], YEAR(final.CombinedDate) AS [Year], COUNT(*) AS [Count] FROM (
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, na.[PublishDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID],DATEADD(hh, @DateTimeOffset, nerd.[StartDateTime]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 0
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' AND aup.Show = 1 AND na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) ''
			IF @UserID = -1 SET @sqlcommand = @sqlcommand + N'' AND aup.UserID IS NULL ''
			ELSE SET @sqlcommand = @sqlcommand + N'' AND aup.UserID = @UserID ''
		END
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
		
	SET @sqlcommand = @sqlcommand + N''
	UNION
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 0
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
		AND ne.EndDate < @CurrentDate ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
	UNION ALL
	SELECT DISTINCT na.[ArticleID], DATEADD(hh, @DateTimeOffset, ne.[StartDate]) AS [CombinedDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
		INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND 1 = CASE WHEN nerd.EndDateTime < @CurrentDate THEN 1 ELSE 0 END ''
		IF @HideUnlocalizedItems = 1 SET @sqlcommand = @sqlcommand + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
	
	IF @FilterByDNNGroupID <> 0 
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	ELSE IF @FilterByDNNUserID <> 0
		SET @sqlcommand = @sqlcommand + N''
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
	
	SET @sqlcommand = @sqlcommand + N''
	WHERE na.PortalID=@PortalID
		AND na.HasPermissions = 1
		AND na.EventArticle = 1
		AND ne.Recurring = 1
		AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		IF @AdminOrSuperUser = 0 SET @sqlcommand = @sqlcommand + N'' AND (na.Approved = 1 AND (na.Active = 1 OR na.UserID = @UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)) ''
		IF @FilterByDNNUserID <> 0 SET @sqlcommand = @sqlcommand + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @sqlcommand = @sqlcommand + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

	SET @sqlcommand = @sqlcommand + N''
) AS final
GROUP BY MONTH(CombinedDate), YEAR(CombinedDate) ORDER BY [Year] DESC, [Month] DESC ''
END

EXEC sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@UserID = @UserID
	,@CalendarModuleID = @CalendarModuleID
	,@LocaleCode = @LocaleCode
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@PermissionsModuleID = @PermissionsModuleID
	,@DateTimeOffset = @DateTimeOffset
	,@FilterCategoryID = @FilterCategoryID
' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_ViewPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION {databaseOwner}[{objectQualifier}EDS_ViewPermissions]
(	
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@AdminOrSuperUser BIT,
	@Perm_ViewAllCategores BIT,
	@PermissionSettingsSource BIT,
	@CurrentDate DATETIME
)
RETURNS @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY)
AS
BEGIN
	IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN	
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL)
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL)
		END
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END
		ELSE
		BEGIN
			INSERT INTO @UserViewCategories
				SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
				WHERE rpsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
				WHERE upsc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [UserID] = @UserID AND [PortalID] = @PortalID AND [ModuleID] = @ModuleID)
		END
	END
RETURN
END' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EDS_EditPermissions]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION {databaseOwner}[{objectQualifier}EDS_EditPermissions]
(	
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@AdminOrSuperUser BIT,
	@Perm_EditAllCategores BIT,
	@PermissionSettingsSource BIT,
	@CurrentDate DATETIME
)
RETURNS @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY)
AS
BEGIN
	IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
	BEGIN
		INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN	
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND [RoleID] IS NULL)
		END
		ELSE
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] = @ModuleID AND [RoleID] IS NULL)
		END
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
		BEGIN
			INSERT INTO @UserEditCategories
				SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [PortalID] = @PortalID AND [ModuleID] IS NULL AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
				WHERE upatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [PortalID] = @PortalID AND [UserID] = @UserID AND [ModuleID] IS NULL)
		END
		ELSE
		BEGIN
			INSERT INTO @UserEditCategories
				SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
				WHERE rpatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] WHERE [ModuleID] = @ModuleID AND RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate)))
				UNION
				SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
				WHERE upatc.[PremissionSettingsID] IN (SELECT [PremissionSettingsID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] WHERE [UserID] = @UserID AND [PortalID] = @PortalID AND [ModuleID] = @ModuleID)
		END
	END
RETURN
END' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsEventViewSignUp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsEventViewSignUp]
	@News_ModuleID INT,
	@PortalID INT,
	@UserID INT,
	@ArticleID INT,
	@RecurringID INT = NULL,
	@IsAdminOrSuperUser BIT = 0
AS 
SET NOCOUNT ON;

DECLARE @IsRegistrationEnabled BIT; -- if article still alows registration
SET @IsRegistrationEnabled = 0;

DECLARE @ShowRegistredUsersRoleID INT;
DECLARE @ShowRegistredUsersTo TINYINT;

DECLARE @HasRegistrationRights BIT;
SET @HasRegistrationRights = 0;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @CanViewArticle BIT;
SET @CanViewArticle = 0;

DECLARE @EventExists BIT;
SET @EventExists = 1;

IF @RecurringID IS NULL
BEGIN
	IF NOT EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE ArticleID = @ArticleID AND EventType = 1)
		SET @EventExists = 0;
	ELSE IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE ArticleID = @ArticleID AND EventType = 1 AND Recurring = 1)
		SET @EventExists = 0;
END
ELSE
BEGIN
	IF NOT EXISTS(
		SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ed
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd ON ed.ArticleID = erd.ArticleID AND erd.RecurringID = @RecurringID
		WHERE ed.ArticleID = @ArticleID AND ed.EventType = 1
	)
		SET @EventExists = 0;
END

IF @EventExists = 1
BEGIN

	DECLARE @PermissionsByPortal BIT;
	DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
	
	DECLARE @HasArticlePermissions BIT;
	SET @HasArticlePermissions = (SELECT HasPermissions FROM {databaseOwner}[{objectQualifier}EasyDNNNews] WHERE ArticleID = @ArticleID);

	IF @IsAdminOrSuperUser = 1
	BEGIN
		SET @CanViewArticle = 1;
		SET @HasRegistrationRights = 1;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @HasArticlePermissions = 1
		BEGIN
			
			IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						WHERE aup.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND aup.UserID IS NULL
							AND aup.Show = 1
							AND (n.Approved = 1)
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
			SET @CanViewArticle = 1;	
					
		END
		ELSE
		BEGIN

			SELECT @PermissionsByPortal = [PermissionsPMSource] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @News_ModuleID;
			
			IF @PermissionsByPortal = 1 -- po portalu
			BEGIN

				IF EXISTS(
					SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.[ShowAllCategories] = 1 AND rps.ModuleID IS NULL AND rps.PortalID = @PortalID AND rps.RoleID IS NULL
				)
					INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
				BEGIN
					INSERT INTO @UserViewCategories
					SELECT DISTINCT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
				END
				
				IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories)
				WHERE n.ArticleID=@ArticleID
					AND n.HasPermissions = 0
					AND n.Approved = 1
					AND n.Active = 1
					AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]
				)
					SET @CanViewArticle = 1;	
			END
			ELSE
			BEGIN
				
				IF EXISTS(
					SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.[ShowAllCategories] = 1 AND rps.ModuleID = @News_ModuleID AND rps.PortalID = @PortalID AND rps.RoleID IS NULL
				)
					INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
				BEGIN
					INSERT INTO @UserViewCategories
					SELECT DISTINCT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @News_ModuleID AND rps.RoleID IS NULL;
				END
				
				IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories)
				WHERE n.ArticleID=@ArticleID
					AND n.HasPermissions = 0
					AND n.Approved = 1
					AND n.Active = 1
					AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]
				)
					SET @CanViewArticle = 1;
			END
			
		END
	END
	ELSE
	BEGIN

		DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
		INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
		
		IF @HasArticlePermissions = 1
		BEGIN
			
			IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						WHERE aup.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND aup.UserID = @UserID
							AND aup.Show = 1
							AND n.Approved = 1
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
				OR EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						WHERE arp.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							AND arp.Show = 1
							AND n.Approved = 1
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
			BEGIN
				SET @CanViewArticle = 1;	
				
				IF EXISTS(
					SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.UserID = @UserID AND aup.EventRegistration = 1
				) OR EXISTS(
					SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
					WHERE arp.ArticleID = @ArticleID AND arp.EventRegistration = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles)
				)
				SET @HasRegistrationRights = 1;
			END
			
		END
		ELSE
		BEGIN

			
			SELECT @PermissionsByPortal = [PermissionsPMSource] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @News_ModuleID;
						
			IF @PermissionsByPortal = 1 -- po portalu
			BEGIN

				IF EXISTS(
					SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.[ShowAllCategories] = 1 AND rps.ModuleID IS NULL AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				) OR EXISTS(
					SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
					WHERE ups.[ShowAllCategories] = 1 AND ups.UserID = @UserID AND ups.ModuleID IS NULL AND ups.PortalID = @PortalID
				)
					INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
				BEGIN
					INSERT INTO @UserViewCategories
					SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
					UNION
					SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
					WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
				END
				
				IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories)
				WHERE n.ArticleID=@ArticleID
					AND n.HasPermissions = 0
					AND n.Approved = 1
					AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
				)
				BEGIN
					SET @CanViewArticle = 1;
				
					IF EXISTS(
						SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
						WHERE rps.[EventRegistration] = 1 AND rps.ModuleID IS NULL AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					) OR EXISTS(
						SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
						WHERE ups.[EventRegistration] = 1 AND ups.UserID = @UserID AND ups.ModuleID IS NULL AND ups.PortalID = @PortalID
					)	
					SET @HasRegistrationRights = 1;	
				END			
			END
			ELSE
			BEGIN
				
				IF EXISTS(
					SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.[ShowAllCategories] = 1 AND rps.ModuleID = @News_ModuleID AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				) OR EXISTS(
					SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
					WHERE ups.[ShowAllCategories] = 1 AND ups.UserID = @UserID AND ups.ModuleID = @News_ModuleID AND ups.PortalID = @PortalID 
				)
					INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
				ELSE
				BEGIN
					INSERT INTO @UserViewCategories
					SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
					INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
					WHERE rps.PortalID = @PortalID AND rps.ModuleID = @News_ModuleID
					UNION
					SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
					WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @News_ModuleID;
				END
				
				IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories)
				WHERE n.ArticleID=@ArticleID
					AND n.HasPermissions = 0
					AND n.Approved = 1
					AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
				)
				BEGIN
					SET @CanViewArticle = 1;
				
					IF EXISTS(
						SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
						WHERE rps.[EventRegistration] = 1 AND rps.ModuleID = @News_ModuleID AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					) OR EXISTS(
						SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
						WHERE ups.[EventRegistration] = 1 AND ups.UserID = @UserID AND ups.ModuleID = @News_ModuleID AND ups.PortalID = @PortalID
					)
					SET @HasRegistrationRights = 1;		
				END
			END
			
		END
	END
		
	IF @CanViewArticle = 1
	BEGIN
		
		DECLARE @DisableFurtherRegistration BIT;
		DECLARE @EnableDaysBeforeStartDate INT;
		DECLARE @DisableDaysBeforeStartDate INT;
		DECLARE @StartDate DATETIME;
		DECLARE @EndDate DATETIME;
			
		IF @RecurringID IS NULL
			SELECT @StartDate = [StartDate]
					,@EndDate = [EndDate]
					,@EnableDaysBeforeStartDate = [EnableDaysBeforeStartDate]
					,@DisableDaysBeforeStartDate = [DisableDaysBeforeStartDate]
					,@ShowRegistredUsersRoleID = [ShowRegistredUsersRole]
					,@ShowRegistredUsersTo = [ShowRegistredUsersTo]
					,@DisableFurtherRegistration = [DisableFurtherRegistration]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE ArticleID = @ArticleID
			ELSE
			SELECT @StartDate = erd.[StartDateTime]
					,@EndDate = erd.[EndDateTime]
					,@EnableDaysBeforeStartDate = ed.[EnableDaysBeforeStartDate]
					,@DisableDaysBeforeStartDate = ed.[DisableDaysBeforeStartDate]
					,@ShowRegistredUsersRoleID = [ShowRegistredUsersRole]
					,@ShowRegistredUsersTo = [ShowRegistredUsersTo]
					,@DisableFurtherRegistration = ed.[DisableFurtherRegistration]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ed
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd ON ed.ArticleID = erd.ArticleID AND erd.RecurringID = @RecurringID
				WHERE ed.ArticleID = @ArticleID
			  
		DECLARE @registrationEndDate BIT;
		SET @registrationEndDate = 0;
			  
		IF @DisableFurtherRegistration = 0
		BEGIN
			IF @DisableDaysBeforeStartDate IS NULL AND @CurrentDate < @StartDate
				SET @registrationEndDate = 1;
			ELSE IF @CurrentDate < DATEADD(minute,-@DisableDaysBeforeStartDate, @StartDate)
				SET @registrationEndDate = 1;
				
			IF @registrationEndDate = 1
			BEGIN
				IF @EnableDaysBeforeStartDate IS NULL
				BEGIN 
					IF @CurrentDate > (SELECT [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] WHERE ArticleID = @ArticleID)
						SET @IsRegistrationEnabled = 1;
				END
				ELSE IF @CurrentDate > DATEADD(minute,-@EnableDaysBeforeStartDate, @StartDate)
					SET @IsRegistrationEnabled = 1;

			END
			END

	END

END

SELECT @CanViewArticle AS CanViewArticle,
	@HasRegistrationRights AS HasRegistrationRights,
	@IsRegistrationEnabled AS IsRegistrationEnabled,
	@ShowRegistredUsersTo AS ShowRegistredUsersTo,
	@ShowRegistredUsersRoleID AS ShowRegistredUsersRoleID' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsEventEditSignUp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsEventEditSignUp]
	@News_ModuleID INT,
	@PortalID INT,
	@UserID INT,
	@ArticleID INT,
	@RecurringID INT,
	@IsAdminOrSuperUser BIT,
	@UserStatus TINYINT
AS 
SET NOCOUNT ON;

-- @UserStatus
-- 0 no
-- 1 yes
-- 2 maybe

DECLARE @ReturnCode SMALLINT;
SET @ReturnCode = 0;
-- 0 insert new record
-- -1 value exists do update
-- -6 value exists - do nothing
-- -2 error occurred
-- -3 article doesnt exist
-- -4 dont have artivle view permissions
-- -5 dont have registration permissions

-- trebam dodati i check dates tj od clanka settingse za registraciju

DECLARE @HasRegistrationRights BIT;
SET @HasRegistrationRights = 0;

DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @EventRegistrationRole INT;

DECLARE @CanViewArticle BIT;
SET @CanViewArticle = 0;

DECLARE @EventUserItemID INT;
SET @EventUserItemID = 0;

IF @RecurringID IS NULL
BEGIN
	IF NOT EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE ArticleID = @ArticleID AND EventType = 1)
		SET @ReturnCode = -3;
	ELSE IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE ArticleID = @ArticleID AND EventType = 1 AND Recurring = 1) -- ako je to clanak recurring onda nije dobro
		SET @ReturnCode = -3;
END
ELSE
BEGIN
	IF NOT EXISTS(
		SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ed
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd ON ed.ArticleID = erd.ArticleID AND erd.RecurringID = @RecurringID
		WHERE ed.ArticleID = @ArticleID AND ed.EventType = 1
	)
		SET @ReturnCode = -3;
END

IF @ReturnCode = 0
BEGIN
	IF @IsAdminOrSuperUser = 1
	BEGIN
		SET @CanViewArticle = 1;
	END
	ELSE
	BEGIN
		DECLARE @HasArticlePermissions BIT;
		SET @HasArticlePermissions = (SELECT HasPermissions FROM {databaseOwner}[{objectQualifier}EasyDNNNews] WHERE ArticleID = @ArticleID);
		
		DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
		INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
		
		IF @HasArticlePermissions = 1
		BEGIN
			IF EXISTS(
				SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = @ArticleID AND aup.UserID = @UserID AND aup.EventRegistration = 1
			) OR EXISTS(
				SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = @ArticleID AND arp.EventRegistration = 1 AND arp.RoleID IN(SELECT [RoleID] FROM @UserInRoles)
			)
			BEGIN
				SET @HasRegistrationRights = 1;

				IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						WHERE aup.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND aup.UserID = @UserID
							AND aup.Show = 1
							AND n.Approved = 1
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
				OR EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
						WHERE arp.ArticleID = @ArticleID
							AND n.HasPermissions = 1
							AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							AND arp.Show = 1
							AND n.Approved = 1
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
						SET @CanViewArticle = 1;
				ELSE
				SET @ReturnCode = -4;			
			END
			ELSE
				SET @ReturnCode = -5;
		END
		ELSE
		BEGIN
		
			DECLARE @PermissionsByPortal BIT;
			SELECT @PermissionsByPortal = [PermissionsPMSource] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] WHERE ModuleID = @News_ModuleID;
			
			DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY);
			
			IF @PermissionsByPortal = 1 -- po portalu
			BEGIN
				IF EXISTS(
					SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.[EventRegistration] = 1 AND rps.ModuleID IS NULL AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				) OR EXISTS(
					SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
					WHERE ups.[EventRegistration] = 1 AND ups.UserID = @UserID AND ups.ModuleID IS NULL AND ups.PortalID = @PortalID
				)	
				BEGIN
					SET @HasRegistrationRights = 1;
					IF EXISTS(
						SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
						WHERE rps.[ShowAllCategories] = 1 AND rps.ModuleID IS NULL AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					) OR EXISTS(
						SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
						WHERE ups.[ShowAllCategories] = 1 AND ups.UserID = @UserID AND ups.ModuleID IS NULL AND ups.PortalID = @PortalID
					)
						INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
					ELSE
					BEGIN
						INSERT INTO @UserViewCategories
						SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
						INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
						WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
						UNION
						SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
						WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
					END
				END
				ELSE
					SET @ReturnCode = -5;	
			END
			ELSE
			BEGIN
				IF EXISTS(
					SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
					WHERE rps.[EventRegistration] = 1 AND rps.ModuleID = @News_ModuleID AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
				) OR EXISTS(
					SELECT [EventRegistration] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
					WHERE ups.[EventRegistration] = 1 AND ups.UserID = @UserID AND ups.ModuleID = @News_ModuleID AND ups.PortalID = @PortalID
				)	
				BEGIN
					SET @HasRegistrationRights = 1;
					
					IF EXISTS(
						SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
						WHERE rps.[ShowAllCategories] = 1 AND rps.ModuleID = @News_ModuleID AND rps.PortalID = @PortalID AND rps.RoleID IN (SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate))
					) OR EXISTS(
						SELECT [ShowAllCategories] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
						WHERE ups.[ShowAllCategories] = 1 AND ups.UserID = @UserID AND ups.ModuleID = @News_ModuleID AND ups.PortalID = @PortalID 
					)
						INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
					ELSE
					BEGIN
						INSERT INTO @UserViewCategories
						SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
						INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
						WHERE rps.PortalID = @PortalID AND rps.ModuleID = @News_ModuleID
						UNION
						SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
						WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @News_ModuleID;
					END			
				END
				ELSE
					SET @ReturnCode = -5;
			END
			
			IF @HasRegistrationRights = 1
			BEGIN
				IF EXISTS (SELECT n.ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserViewCategories)
					WHERE n.ArticleID=@ArticleID
						AND n.HasPermissions = 0
						AND n.Approved = 1
						AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
					)
					SET @CanViewArticle = 1;
				ELSE
					SET @ReturnCode = -4;
			END
		END
	END
	
	IF @CanViewArticle = 1
	BEGIN
		DECLARE @EventUserId INT;

		SELECT @EventUserId=Id FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventUsers] WHERE DNNUserID = @UserId
		IF @EventUserId IS NULL
		BEGIN
			INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsEventUsers] ([DNNUserID],[EmailAuthenticatedUserID]) VALUES (@UserId,NULL)
			SELECT @EventUserId=CAST(SCOPE_IDENTITY() AS INT);
		END
				
		IF @RecurringID IS NULL
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE ArticleID = @ArticleID AND EventUserID=@EventUserId)
			BEGIN
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE ArticleID = @ArticleID AND EventUserID=@EventUserId AND [UserStatus] = @UserStatus)
					SET @ReturnCode = -6;
				ELSE
					SET @ReturnCode = -1;
			END
		END
		ELSE
		BEGIN
			IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE RecurringArticleID = @ArticleID AND RecurringID = @RecurringID AND EventUserID=@EventUserId)
			BEGIN
				IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE RecurringArticleID = @ArticleID AND RecurringID = @RecurringID AND EventUserID=@EventUserId AND [UserStatus] = @UserStatus)
					SET @ReturnCode = -6;
				ELSE
					SET @ReturnCode = -1;
			END
		END

		IF @ReturnCode <> -6
		BEGIN
			
			DECLARE @IsRegistrationEnabled BIT;
			SET @IsRegistrationEnabled = 0;
			
			DECLARE @DisableFurtherRegistration BIT;
			DECLARE @EnableDaysBeforeStartDate INT;
			DECLARE @DisableDaysBeforeStartDate INT;
			DECLARE @StartDate DATETIME;
			DECLARE @EndDate DATETIME;

			IF @RecurringID IS NULL
				SELECT @StartDate = [StartDate]
					  ,@EndDate = [EndDate]
					  ,@EnableDaysBeforeStartDate = [EnableDaysBeforeStartDate]
					  ,@DisableDaysBeforeStartDate = [DisableDaysBeforeStartDate]
					  ,@EventRegistrationRole = [EventRegistrationRole]
					  ,@DisableFurtherRegistration = [DisableFurtherRegistration]
				 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE ArticleID = @ArticleID
			 ELSE
				SELECT @StartDate = erd.[StartDateTime]
					  ,@EndDate = erd.[EndDateTime]
					  ,@EnableDaysBeforeStartDate = ed.[EnableDaysBeforeStartDate]
					  ,@DisableDaysBeforeStartDate = ed.[DisableDaysBeforeStartDate]
					  ,@EventRegistrationRole = ed.[EventRegistrationRole]
					  ,@DisableFurtherRegistration = ed.[DisableFurtherRegistration]
				 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ed
				 INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd ON ed.ArticleID = erd.ArticleID AND erd.RecurringID = @RecurringID
				 WHERE ed.ArticleID = @ArticleID
			  
			DECLARE @registrationEndDate BIT;
			SET @registrationEndDate = 0;
			  
			IF @DisableFurtherRegistration = 0
			BEGIN
				IF @DisableDaysBeforeStartDate IS NULL AND @CurrentDate < @StartDate
					SET @registrationEndDate = 1;
				ELSE IF @CurrentDate < DATEADD(minute,-@DisableDaysBeforeStartDate, @StartDate)
					SET @registrationEndDate = 1;
				
				IF @registrationEndDate = 1
				BEGIN
					IF @EnableDaysBeforeStartDate IS NULL
					BEGIN 
						IF @CurrentDate > (SELECT [PublishDate] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] WHERE ArticleID = @ArticleID)
							SET @IsRegistrationEnabled = 1;
					END
					ELSE IF @CurrentDate > DATEADD(minute,-@EnableDaysBeforeStartDate, @StartDate)
						SET @IsRegistrationEnabled = 1;

				END
			 END
			 
			IF @IsRegistrationEnabled = 1
			BEGIN
				
				IF @ReturnCode = -1 -- record exists - update !!!
				BEGIN
									
					BEGIN TRY
						IF @RecurringID IS NULL
						BEGIN
							UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems]
								SET [LastModifiedDate] = @CurrentDate
									,[UserStatus] = @UserStatus
							WHERE ArticleID = @ArticleID AND EventUserID=@EventUserId;
							
							SELECT @EventUserItemID = Id FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE ArticleID = @ArticleID AND EventUserID=@EventUserId;
							
						END
						ELSE
						BEGIN
							UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems]
								SET [LastModifiedDate] = @CurrentDate
									,[UserStatus] = @UserStatus
							WHERE RecurringArticleID = @ArticleID AND RecurringID = @RecurringID AND EventUserID=@EventUserId;
							
							SELECT @EventUserItemID = Id FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE RecurringArticleID = @ArticleID AND RecurringID = @RecurringID AND EventUserID=@EventUserId;
							
						END

					END TRY
					BEGIN CATCH
						SET @ReturnCode = -2;
					END CATCH
				
				END
				ELSE
				BEGIN
				
					BEGIN TRY

						IF @RecurringID IS NULL
						BEGIN
							INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems]
							   ([ArticleID]
							   ,[EventUserID]
							   ,[ApproveStatus]
							   ,[CreatedOnDate]
							   ,[LastModifiedDate],[NumberOfTickets],[Message],[UserStatus])
						 VALUES
							   (@ArticleID,
							   @EventUserId,
							   1,
							   @CurrentDate,
							   @CurrentDate,1,NULL,@UserStatus)
							   
							   SELECT @EventUserItemID = Id FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE ArticleID = @ArticleID AND EventUserID=@EventUserId;
						END
						ELSE
						BEGIN
							INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems]
							   ([RecurringArticleID]
							   ,[RecurringID]
							   ,[EventUserID]
							   ,[ApproveStatus]
							   ,[CreatedOnDate]
							   ,[LastModifiedDate],[NumberOfTickets],[Message],[UserStatus])
						 VALUES
							   (@ArticleID,
							   @RecurringID,
							   @EventUserId,
							   1,
							   @CurrentDate,
							   @CurrentDate,1,NULL,@UserStatus)
							   
						SELECT @EventUserItemID = Id FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] WHERE RecurringArticleID = @ArticleID AND RecurringID = @RecurringID AND EventUserID=@EventUserId;
	   
						END

					END TRY
					BEGIN CATCH
						SET @ReturnCode = -2;
					END CATCH
					
				END
				
			END
			ELSE
				SET @EventRegistrationRole = NULL;
		END
	END
END

SELECT @ReturnCode AS ReturnCode, @EventUserItemID AS EventUserItemID, @EventRegistrationRole AS EventRegistrationRole;' 
END
GO